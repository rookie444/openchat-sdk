// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../pb/common.dart';
import 'model/login.dart';
import 'model/user.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// 获取短信验证码
///
/// 参数：
/// * `country_code` - 国家代码，例如 "86"
/// * `phone` - 手机号码
Future<void> getSmsCode({required String countryCode, required String phone}) =>
    RustLib.instance.api.crateApiLoginApiGetSmsCode(
      countryCode: countryCode,
      phone: phone,
    );

/// 通过手机号和验证码登录
///
/// 参数：
/// * `country_code` - 国家代码，例如 "86"
/// * `phone` - 手机号码
/// * `sms_code` - 短信验证码
Future<FfiLoginResponse> login({
  required String countryCode,
  required String phone,
  required String smsCode,
}) => RustLib.instance.api.crateApiLoginApiLogin(
  countryCode: countryCode,
  phone: phone,
  smsCode: smsCode,
);

Future<FfiLoginResponse> loginByPassword({
  required String countryCode,
  required String phone,
  required String password,
}) => RustLib.instance.api.crateApiLoginApiLoginByPassword(
  countryCode: countryCode,
  phone: phone,
  password: password,
);

/// 用户注册
///
/// 参数：
/// * `country_code` - 国家代码，例如 "86"
/// * `account` - 账号（手机号或邮箱）
/// * `account_type` - 账号类型（0: 手机号, 1: 邮箱）
/// * `sms_code` - 验证码
Future<FfiRegResponse> register({
  required String countryCode,
  required String account,
  required AccountType accountType,
  required String smsCode,
}) => RustLib.instance.api.crateApiLoginApiRegister(
  countryCode: countryCode,
  account: account,
  accountType: accountType,
  smsCode: smsCode,
);
