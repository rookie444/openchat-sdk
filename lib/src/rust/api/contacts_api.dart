// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../pb/contacts.dart';
import 'model/contacts.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// 获取通讯录中的联系人列表
Future<List<FfiContactDetail>> getContactsList({
  required bool includePresences,
  required ContactOrderType orderType,
}) => RustLib.instance.api.crateApiContactsApiGetContactsList(
  includePresences: includePresences,
  orderType: orderType,
);

/// 更新联系人免打扰设置
Future<bool> updateContactDisturb({
  required PlatformInt64 contactsId,
  required bool bfDisturb,
}) => RustLib.instance.api.crateApiContactsApiUpdateContactDisturb(
  contactsId: contactsId,
  bfDisturb: bfDisturb,
);

Future<bool> contactOperation({
  required ContactsOperator operation,
  required ContactsParam params,
}) => RustLib.instance.api.crateApiContactsApiContactOperation(
  operation: operation,
  params: params,
);

/// 更新联系人星标设置
Future<bool> updateContactStar({
  required PlatformInt64 contactsId,
  required bool bfStar,
}) => RustLib.instance.api.crateApiContactsApiUpdateContactStar(
  contactsId: contactsId,
  bfStar: bfStar,
);

/// 更新联系人置顶设置
Future<bool> updateContactTop({
  required PlatformInt64 contactsId,
  required bool bfTop,
}) => RustLib.instance.api.crateApiContactsApiUpdateContactTop(
  contactsId: contactsId,
  bfTop: bfTop,
);

/// 更新联系人备注
Future<bool> updateContactRemark({
  required PlatformInt64 contactsId,
  required String noteName,
}) => RustLib.instance.api.crateApiContactsApiUpdateContactRemark(
  contactsId: contactsId,
  noteName: noteName,
);

/// 更新联系人设置（原方法保持兼容）
Future<bool> updateContactsData({
  required PlatformInt64 contactsId,
  required bool bfDisturb,
}) => RustLib.instance.api.crateApiContactsApiUpdateContactsData(
  contactsId: contactsId,
  bfDisturb: bfDisturb,
);

/// 示例：从 Dart 接收用户操作通知
Future<bool> notifyContactAction({
  required PlatformInt64 userId,
  required String action,
  required String params,
}) => RustLib.instance.api.crateApiContactsApiNotifyContactAction(
  userId: userId,
  action: action,
  params: params,
);
